name: AI-Assisted CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  ai-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Run AI-specific tests
      run: |
        pytest tests/unit/*_ai.py -v --junitxml=test-results/ai-tests.xml

    - name: Performance tests
      run: |
        pytest -m "ai_performance" -v --junitxml=test-results/performance.xml

    - name: Security tests
      run: |
        pytest -m "ai_security" -v --junitxml=test-results/security.xml

    - name: Check test coverage
      run: |
        coverage run -m pytest
        coverage report
        coverage xml

    - name: Upload test results
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: test-results/

    - name: Upload coverage report
      uses: actions/upload-artifact@v2
      with:
        name: coverage-report
        path: coverage.xml

  ai-lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.12

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort

    - name: Check code style
      run: |
        black --check .
        isort --check-only .
        flake8 .

  ai-security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Security scan
      uses: snyk/actions/python@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

    - name: Run Bandit
      run: |
        pip install bandit
        bandit -r . -f json -o security-report.json

    - name: Upload security report
      uses: actions/upload-artifact@v2
      with:
        name: security-report
        path: security-report.json

  ai-docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.12

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pdoc3

    - name: Generate documentation
      run: |
        pdoc --html --output-dir docs/api feed_processor

    - name: Upload documentation
      uses: actions/upload-artifact@v2
      with:
        name: api-docs
        path: docs/api/
