name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
        
    - name: Install build dependencies
      run: |
        python3.12 -m pip install --upgrade pip
        pip install build wheel setuptools
        
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        
    - name: Check formatting with black
      run: black --check feed_processor tests

    - name: Check imports with isort
      run: isort --check-only feed_processor tests

    - name: Lint with flake8
      run: flake8 feed_processor tests

    - name: Type check with mypy
      run: mypy feed_processor

  test:
    runs-on: ubuntu-latest
    needs: lint
    services:
      prometheus:
        image: prom/prometheus:latest
        ports:
          - 9090:9090
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
        
    - name: Install build dependencies
      run: |
        python3.12 -m pip install --upgrade pip
        pip install build wheel setuptools
        
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        python3.12 -m spacy download en_core_web_sm
        
    - name: Run unit tests
      run: |
        python3.12 -m pytest tests/unit -v --cov=feed_processor --cov-report=xml
        
    - name: Run integration tests
      run: |
        python3.12 -m pytest tests/integration -v --cov=feed_processor --cov-report=xml --cov-append
        
    - name: Run remaining tests
      run: |
        python3.12 -m pytest tests/*.py tests/performance/*.py -v --cov=feed_processor --cov-report=xml --cov-append
        
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
